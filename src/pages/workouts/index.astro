---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import { Image } from "astro:assets";

const posts = (await getCollection("blog")).filter(b => b.data.tags?.includes('workout')).sort(
  (a, b) => (b.data.pubDate || 0).valueOf() - (a.data.pubDate || 0).valueOf()
);
---
<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="bg-background min-h-screen flex flex-col">
    <div class="relative bg-background min-h-screen flex flex-col" id="header">
      <div class="z-20 sticky top-0 transition-all" id="header">
        <Header transparent />
      </div>
      <h1
        class="text-7xl md:text-8xl lg:text-9xl font-black tracking-tighter text-center mx-2"
      >
        <span>JUST</span>
        <span>THE</span>
        <span>WORKOUTS</span>
      </h1>
      <main
        class="flex-1 w-[min(2000px,100%)] max-w-[calc(100%-2em)] mx-auto py-10 px-4"
      >
        <section>
          <ul
            class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 gap-5"
          >
            {
              posts.map((post, index) => (
              <article class="overflow-hidden rounded-lg shadow-sm transition-all hover:shadow-2xl border border-1 border-muted duration-500 group cursor-pointer">
              <a href={`/workouts/${post.slug}/`}>
                <div class="overflow-hidden">
                  <Image
                    src={post.data.heroImage}
                    alt=""
                    width={1200}
                    height={224}
                    class="h-56 w-full object-cover group-hover:scale-125 transition-all duration-500"
                    srcset={`${post.data.heroImage.src}?w=600 600w, ${post.data.heroImage.src}?w=1200 1200w`}
                    sizes="(max-width: 768px) 600px, 1200px"
                    format="webp"
                    quality={80}
                    loading={index < 5 ? "eager" : "lazy"}
                  />
                </div>
                <div class="bg-card p-4 sm:p-6">
                  {post.data.pubDate && (
                    <time
                      datetime={post.data.pubDate.toString()}
                      class="block text-xs text-gray-500"
                    >
                      <FormattedDate date={post.data.pubDate} />
                    </time>
                  )}

                  <h3 class="mt-0.5 text-lg text-foreground">
                    {post.data.title}
                  </h3>

                  {post.data.description && (
                    <p class="mt-2 line-clamp-3 text-sm/relaxed text-secondary-foreground">
                      {post.data.description}
                    </p>
                  )}
                </div>
              </a>
            </article>
              ))
            }
          </ul>
        </section>
      </main>
      <Footer />
    </div>
  </body>
</html>