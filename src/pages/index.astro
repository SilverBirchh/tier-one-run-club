---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import home from "../images/home.jpg";
import { getCollection } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import { getImage } from "astro:assets";

const posts = (await getCollection("blog")).sort(
  (a, b) => (b.data.pubDate || 0).valueOf() - (a.data.pubDate || 0).valueOf()
);

const optimizedBackground = await getImage({ src: home, format: "webp" });
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <div
      class="h-[90vh] bg-cover bg-no-repeat relative"
      style={`background-image: url(${optimizedBackground.src}); background-position: bottom;`}
    >
      <div class="z-20 sticky top-0 transition-all" id="header">
        <Header transparent />
      </div>
      <span
        class="absolute text-center inset-0 flex flex-col text-[var(--accent)] gap-0 font-extrabold justify-center items-center z-10"
      >
        <p
          class="m-0 !leading-[0.8] uppercase text-5xl sm:text-7xl md:text-8xl lg:text-9xl"
        >
          Lace Up.
        </p>
        <p
          class="m-0 !leading-[0.8] uppercase text-5xl sm:text-7xl md:text-8xl lg:text-9xl"
        >
          Run Happy.
        </p>
        <p
          class="m-0 !leading-[0.8] uppercase text-5xl sm:text-7xl md:text-8xl lg:text-9xl"
        >
          Crush Goals.
        </p>
        <a href="/blog" class="!text-white">
          <p class="text-white text-md flex font-medium m-0 items-center group">
            Explore the blog <Icon
              class="hover:text-red-500 group-hover:translate-x-2 transition-transform"
              name="radix-icons:arrow-right"
            />
          </p>
        </a>
      </span>
    </div>

    <main>
      <section>
        <ul>
          {
            posts.map((post) => (
              <li>
                <a href={`/blog/${post.slug}/`}>
                  <div class="h-min overflow-hidden rounded-md mb-5">
                    <Image
                      class="aspect-video rounded-md hover:scale-125 transition-all duration-500 cursor-pointer"
                      src={post.data.heroImage}
                      alt=""
                    />
                  </div>

                  <h4 class="title">{post.data.title}</h4>
                  <p class="date">
                    {post.data.pubDate && (
                      <FormattedDate date={post.data.pubDate} />
                    )}
                  </p>
                </a>
              </li>
            ))
          }
        </ul>
      </section>
    </main>
    <Footer />
    <style>
      main {
        width: 960px;
      }
      ul {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        list-style-type: none;
        margin: 0;
        padding: 0;
      }
      ul li {
        width: calc(50% - 1rem);
      }
      ul li * {
        text-decoration: none;
        transition: 0.2s ease;
      }

      ul li a {
        display: block;
      }
      .title {
        margin: 0;
        color: rgb(var(--black));
        line-height: 1;
      }
      .date {
        margin: 0;
        color: rgb(var(--gray));
      }
      ul li a:hover h4,
      ul li a:hover .date {
        color: rgb(var(--accent));
      }

      @media (max-width: 720px) {
        ul {
          gap: 0.5em;
        }
        ul li {
          width: 100%;
          text-align: center;
        }
      }
      :global(.scroll) {
        transition: all 0.3s ease-in-out;
        backdrop-filter: blur(10px);
      }
    </style>
  </body>
</html>

<script is:inline>
  function attachEvent(selector, event, fn) {
    const matches =
      typeof selector === "string"
        ? document.querySelectorAll(selector)
        : selector;
    if (matches && matches.length) {
      matches.forEach((elem) => {
        elem.addEventListener(event, (e) => fn(e, elem), false);
      });
    }
  }

  window.onload = function () {
    let lastKnownScrollPosition = window.scrollY;
    let ticking = true;

    function appyHeaderStylesOnScroll() {
      const header = document.querySelector("#header header");
      if (
        lastKnownScrollPosition > 60 &&
        !header.classList.contains("scroll")
      ) {
        header.classList.add("scroll");
      } else if (
        lastKnownScrollPosition <= 60 &&
        header.classList.contains("scroll")
      ) {
        header.classList.remove("scroll");
      }
      ticking = false;
    }
    appyHeaderStylesOnScroll();

    attachEvent([document], "scroll", function () {
      lastKnownScrollPosition = window.scrollY;

      if (!ticking) {
        window.requestAnimationFrame(() => {
          appyHeaderStylesOnScroll();
        });
        ticking = true;
      }
    });
  };

  window.onpageshow = function () {
    document.documentElement.classList.add("motion-safe:scroll-smooth");
    const elem = document.querySelector("[data-aw-toggle-menu]");
    if (elem) {
      elem.classList.remove("expanded");
    }
    document.body.classList.remove("overflow-hidden");
    document.getElementById("header")?.classList.remove("h-screen");
    document.getElementById("header")?.classList.remove("expanded");
    document.querySelector("#header nav")?.classList.add("hidden");
  };
</script>
