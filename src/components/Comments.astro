---
import Contact from "./contact.astro";
import { Input } from "./ui/input";
import { Textarea } from "./ui/textarea";
import { MessageCircle } from "lucide-react";

type Props = {
  post: string;
  doneText?: string;
  comments?: {
    name: string;
    date: string;
    comment: string;
  }[];
};

const { post, comments = [], doneText } = Astro.props;
const commentCount = comments.length;
---

<div class="w-full max-w-3xl mx-auto space-y-8">
  <div
    class="bg-linear-to-br from-blue-50 to-violet-50 dark:from-blue-950/50 dark:to-violet-950/50 rounded-xl p-8 shadow-sm"
  >
    <div class="flex flex-col md:flex-row md:items-center gap-6">
      <div class="flex-1 space-y-2">
        <div class="flex items-center gap-2 text-blue-600 dark:text-blue-400">
          <h2 class="font-semibold">Stay Updated</h2>
        </div>
        <p class="text-sm text-muted-foreground">
          Get the latest posts delivered straight to your inbox. No spam,
          unsubscribe anytime.
        </p>
      </div>
      <Contact
        post="subscribe"
        containerClass="flex w-full md:w-auto gap-2"
        buttonText="Subscribe"
        doneText="You are subscribed!"
      >
        <Input
          type="email"
          name="email"
          placeholder="Enter your email"
          required
          className="md:w-64"
        />
      </Contact>
    </div>
  </div>

  <div class="rounded-xl border bg-card text-card-foreground shadow-sm">
    <div class="p-6 space-y-6">
      <div class="flex items-center justify-between">
        <div class="flex justify-center items-center gap-2">
          <MessageCircle className="h-5 w-5 text-blue-600 dark:text-blue-400" />
          <h2 class="text-xl font-semibold m-0">Discussion</h2>
        </div>
        <span
          class="bg-blue-100 dark:bg-blue-900/50 text-blue-700 dark:text-blue-300 px-3 py-1 rounded-full text-sm font-medium"
        >
          {commentCount}
          {commentCount === 1 ? " comment" : " comments"}
        </span>
      </div>

      <div class="rounded-lg p-0 md:p-6">
        <h3 class="text-lg font-medium mb-4">Leave a comment</h3>
        <Contact
          post={post}
          containerClass="flex flex-col gap-4"
          buttonText="Post Comment"
          doneText={doneText}
        >
          <Input placeholder="Your name" type="string" name="name" required />
          <Textarea
            name="message"
            required
            placeholder="Share your thoughts..."
            className="min-h-[100px]"
          />
        </Contact>
        <p class="text-sm text-muted-foreground mt-4">
          Comments are moderated and will appear once approved.
        </p>
      </div>

      {
        comments.length > 0 && (
          <div class="space-y-6">
            {comments.map((c) => (
              <div class="flex gap-4 group">
                <div class="w-10 h-10 rounded-full bg-linear-to-br from-blue-100 to-violet-100 dark:from-blue-900 dark:to-violet-900 flex items-center justify-center text-lg font-semibold text-blue-700 dark:text-blue-300">
                  {c.name[0].toUpperCase()}
                </div>
                <div class="flex-1">
                  <div class="flex items-center gap-2 mb-1">
                    <span class="font-medium">{c.name}</span>
                    <span class="text-sm text-muted-foreground">{c.date}</span>
                  </div>
                  <p class="text-sm text-foreground/90 leading-relaxed">
                    {c.comment}
                  </p>
                </div>
              </div>
            ))}
          </div>
        )
      }

      {
        comments.length === 0 && (
          <div class="text-center py-6 text-muted-foreground">
            <p>No comments yet. Be the first to share your thoughts!</p>
          </div>
        )
      }
    </div>
  </div>
</div>
